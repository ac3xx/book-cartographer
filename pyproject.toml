[tool.poetry]
name = "book-cartographer"
version = "0.1.0"
description = "Tool to extract and map entities and relationships from EPUB files"
authors = ["James Long <me@james-long.com>"]
readme = "README.md"
license = "MIT"
repository = "https://github.com/ac3xx/book-cartographer"
documentation = "https://github.com/ac3xx/book-cartographer/docs"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Education",
    "Intended Audience :: End Users/Desktop",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Text Processing :: Markup",
    "Topic :: Utilities",
]
packages = [{include = "epub_character_graph"}]

[tool.poetry.dependencies]
python = ">=3.9,<3.13"
ebooklib = "^0.18.0"
spacy = "^3.7.2"
litellm = "^1.10.0"
networkx = "^3.1"
click = "^8.1.3"
rich = "^13.7.0"
pydantic = "^2.4.2"
tqdm = "^4.66.1"
diskcache = "^5.6.1"
jinja2 = "^3.1.2"
asyncio = "^3.4.3"
beautifulsoup4 = "^4.12.2"
tomli = "^2.0.1"
tomli-w = "^1.0.0"

[tool.poetry.group.dev.dependencies]
black = "^23.11.0"
isort = "^5.12.0"
mypy = "^1.7.0"
pytest = "^7.4.3"
ruff = "^0.1.6"

[tool.poetry.scripts]
book-cartographer = "epub_character_graph.cli:main"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/ac3xx/book-cartographer/issues"
"Documentation" = "https://github.com/ac3xx/book-cartographer/docs"
"Source Code" = "https://github.com/ac3xx/book-cartographer"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88

[tool.isort]
profile = "black"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.ruff]
line-length = 88
target-version = "py39"
select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "ARG",  # flake8-unused-arguments
    "SIM",  # flake8-simplify
    "ERA",  # eradicate
    "PL",   # pylint
    "RUF",  # ruff-specific rules
]
ignore = [
    "E501",  # line too long - handled by black
]

[tool.ruff.per-file-ignores]
"tests/*" = ["ARG", "PLR2004"]  # Ignore unused arguments and magic numbers in tests
